{"ast":null,"code":"import _slicedToArray from \"/Users/kimberlykwon/Documents/tkc-trial-class-signup/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kimberlykwon/Documents/tkc-trial-class-signup/src/WeekView.js\";\nimport React from 'react';\nimport ScheduleGrid from './ScheduleGrid';\nimport { useTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport SwipeableViews from 'react-swipeable-views';\n\nfunction getThisWeek() {\n  let curr = new Date();\n  let weekDayNames = [\"Mon\", \"Tues\", \"Wed\", \"Thurs\"];\n  let week = [];\n  let nextWeekCurr = new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() + 7);\n\n  for (let i = 1; i <= 4; i++) {\n    let first = curr.getDate() - curr.getDay() + i;\n    let day = new Date(curr.setDate(first)).toISOString().slice(5, 10);\n    week.push(weekDayNames[i - 1] + \" \" + day);\n  }\n\n  console.log(week);\n\n  for (let i = 1; i <= 4; i++) {\n    let first = nextWeekCurr.getDate() - nextWeekCurr.getDay() + i;\n    let day = new Date(nextWeekCurr.setDate(first)).toISOString().slice(5, 10);\n    week.push(day);\n  }\n\n  console.log(week);\n}\n\nconst weekSteps = [{\n  label: [\"Mon 1/20\", \"Tues 1/21\", \"Wed 1/22\", \"Thurs 1/23\"]\n}, {\n  label: [\"Mon 1/27\", \"Tues 1/28\", \"Wed 1/29\", \"Thurs 1/30\"]\n}];\nexport default function WeekView(props) {\n  // const weekOutput = getThisWeek();\n  // const classes = useStyles();\n  const theme = useTheme();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        activeStep = _React$useState2[0],\n        setActiveStep = _React$useState2[1];\n\n  function handleNext() {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  }\n\n  function handleStepChange(step) {\n    setActiveStep(step);\n  }\n\n  getThisWeek();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"small\",\n    onClick: handleBack,\n    disabled: activeStep === 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, theme.direction === 'rtl' ? React.createElement(KeyboardArrowRight, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }) : React.createElement(KeyboardArrowLeft, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), \"Prev Week\"), React.createElement(Button, {\n    size: \"small\",\n    onClick: handleNext,\n    disabled: activeStep === 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Next Week\", theme.direction === 'rtl' ? React.createElement(KeyboardArrowLeft, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }) : React.createElement(KeyboardArrowRight, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(SwipeableViews, {\n    axis: theme.direction === 'rtl' ? 'x-reverse' : 'x',\n    index: activeStep,\n    onChangeIndex: handleStepChange,\n    enableMouseEvents: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, weekSteps.map((step, index) => React.createElement(\"div\", {\n    key: step.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, Math.abs(activeStep - index) < 2 ? React.createElement(ScheduleGrid, {\n    weekOutput: step.label,\n    type: props.version,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }) : null))));\n}","map":{"version":3,"sources":["/Users/kimberlykwon/Documents/tkc-trial-class-signup/src/WeekView.js"],"names":["React","ScheduleGrid","useTheme","Button","KeyboardArrowLeft","KeyboardArrowRight","SwipeableViews","getThisWeek","curr","Date","weekDayNames","week","nextWeekCurr","getFullYear","getMonth","getDate","i","first","getDay","day","setDate","toISOString","slice","push","console","log","weekSteps","label","WeekView","props","theme","useState","activeStep","setActiveStep","handleNext","prevActiveStep","handleBack","handleStepChange","step","direction","map","index","Math","abs","version"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,iBAAP,MAA8B,sCAA9B;AACA,OAAOC,kBAAP,MAA+B,uCAA/B;AACA,OAAOC,cAAP,MAA2B,uBAA3B;;AAEA,SAASC,WAAT,GAAsB;AACpB,MAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,MAAIC,YAAY,GAAG,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,OAAvB,CAAnB;AACA,MAAIC,IAAI,GAAG,EAAX;AAEA,MAAIC,YAAY,GAAG,IAAIH,IAAJ,CAASD,IAAI,CAACK,WAAL,EAAT,EAA6BL,IAAI,CAACM,QAAL,EAA7B,EAA8CN,IAAI,CAACO,OAAL,KAAe,CAA7D,CAAnB;;AAGA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,QAAIC,KAAK,GAAGT,IAAI,CAACO,OAAL,KAAiBP,IAAI,CAACU,MAAL,EAAjB,GAAiCF,CAA7C;AACA,QAAIG,GAAG,GAAG,IAAIV,IAAJ,CAASD,IAAI,CAACY,OAAL,CAAaH,KAAb,CAAT,EAA8BI,WAA9B,GAA4CC,KAA5C,CAAkD,CAAlD,EAAqD,EAArD,CAAV;AACAX,IAAAA,IAAI,CAACY,IAAL,CAAUb,YAAY,CAACM,CAAC,GAAC,CAAH,CAAZ,GAAmB,GAAnB,GAAyBG,GAAnC;AACD;;AACDK,EAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;;AAEA,OAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,QAAIC,KAAK,GAAGL,YAAY,CAACG,OAAb,KAAyBH,YAAY,CAACM,MAAb,EAAzB,GAAiDF,CAA7D;AACA,QAAIG,GAAG,GAAG,IAAIV,IAAJ,CAASG,YAAY,CAACQ,OAAb,CAAqBH,KAArB,CAAT,EAAsCI,WAAtC,GAAoDC,KAApD,CAA0D,CAA1D,EAA6D,EAA7D,CAAV;AACAX,IAAAA,IAAI,CAACY,IAAL,CAAUJ,GAAV;AACD;;AACDK,EAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACD;;AAGD,MAAMe,SAAS,GAAE,CACf;AACEC,EAAAA,KAAK,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,UAA1B,EAAsC,YAAtC;AADT,CADe,EAIf;AACEA,EAAAA,KAAK,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,UAA1B,EAAsC,YAAtC;AADT,CAJe,CAAjB;AAUA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AACrC;AAEA;AACA,QAAMC,KAAK,GAAG5B,QAAQ,EAAtB;;AAJqC,0BAKDF,KAAK,CAAC+B,QAAN,CAAe,CAAf,CALC;AAAA;AAAA,QAK9BC,UAL8B;AAAA,QAKlBC,aALkB;;AAOrC,WAASC,UAAT,GAAsB;AACpBD,IAAAA,aAAa,CAACE,cAAc,IAAIA,cAAc,GAAG,CAApC,CAAb;AACD;;AAED,WAASC,UAAT,GAAsB;AACpBH,IAAAA,aAAa,CAACE,cAAc,IAAIA,cAAc,GAAG,CAApC,CAAb;AACD;;AAED,WAASE,gBAAT,CAA0BC,IAA1B,EAAgC;AAC9BL,IAAAA,aAAa,CAACK,IAAD,CAAb;AACD;;AAED/B,EAAAA,WAAW;AAEX,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,OAAO,EAAE6B,UAA9B;AAA0C,IAAA,QAAQ,EAAEJ,UAAU,KAAK,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACS,SAAN,KAAoB,KAApB,GAA4B,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5B,GAAqD,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADxD,cADF,EAKE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,OAAO,EAAEL,UAA9B;AAA0C,IAAA,QAAQ,EAAEF,UAAU,KAAK,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEGF,KAAK,CAACS,SAAN,KAAoB,KAApB,GAA4B,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5B,GAAoD,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFvD,CALF,EASE,oBAAC,cAAD;AACE,IAAA,IAAI,EAAET,KAAK,CAACS,SAAN,KAAoB,KAApB,GAA4B,WAA5B,GAA0C,GADlD;AAEE,IAAA,KAAK,EAAEP,UAFT;AAGE,IAAA,aAAa,EAAEK,gBAHjB;AAIE,IAAA,iBAAiB,MAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGX,SAAS,CAACc,GAAV,CAAc,CAACF,IAAD,EAAOG,KAAP,KACb;AAAK,IAAA,GAAG,EAAEH,IAAI,CAACX,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGe,IAAI,CAACC,GAAL,CAASX,UAAU,GAAGS,KAAtB,IAA+B,CAA/B,GACC,oBAAC,YAAD;AAAc,IAAA,UAAU,EAAIH,IAAI,CAACX,KAAjC;AAAwC,IAAA,IAAI,EAAGE,KAAK,CAACe,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAEG,IAHN,CADD,CANH,CATF,CADF;AA0BD","sourcesContent":["import React from 'react';\nimport ScheduleGrid from './ScheduleGrid';\nimport { useTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport SwipeableViews from 'react-swipeable-views';\n\nfunction getThisWeek(){\n  let curr = new Date();\n  let weekDayNames = [\"Mon\", \"Tues\", \"Wed\", \"Thurs\"];\n  let week = [];\n  \n  let nextWeekCurr = new Date(curr.getFullYear(), curr.getMonth(), curr.getDate()+7);\n\n\n  for (let i = 1; i <= 4; i++) {\n    let first = curr.getDate() - curr.getDay() + i;\n    let day = new Date(curr.setDate(first)).toISOString().slice(5, 10);\n    week.push(weekDayNames[i-1]+ \" \" + day);\n  }\n  console.log(week);\n\n  for (let i = 1; i <= 4; i++) {\n    let first = nextWeekCurr.getDate() - nextWeekCurr.getDay() + i;\n    let day = new Date(nextWeekCurr.setDate(first)).toISOString().slice(5, 10);\n    week.push(day);\n  }\n  console.log(week);\n}\n\n\nconst weekSteps =[\n  {\n    label: [\"Mon 1/20\", \"Tues 1/21\", \"Wed 1/22\", \"Thurs 1/23\"],\n  },\n  {\n    label: [\"Mon 1/27\", \"Tues 1/28\", \"Wed 1/29\", \"Thurs 1/30\"],\n  }\n]\n\n\nexport default function WeekView(props){\n  // const weekOutput = getThisWeek();\n\n  // const classes = useStyles();\n  const theme = useTheme();\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  function handleNext() {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  }\n\n  function handleStepChange(step) {\n    setActiveStep(step);\n  }\n\n  getThisWeek();\n\n  return (\n    <div>\n      <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n        Prev Week\n      </Button>\n      <Button size=\"small\" onClick={handleNext} disabled={activeStep === 1}>\n        Next Week\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </Button>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={activeStep}\n        onChangeIndex={handleStepChange}\n        enableMouseEvents\n      >\n        {weekSteps.map((step, index) => (\n          <div key={step.label}>\n            {Math.abs(activeStep - index) < 2 ? (\n              <ScheduleGrid weekOutput = {step.label} type= {props.version}/>\n            ) : null}\n          </div>\n        ))}\n      </SwipeableViews>\n    </div>\n);\n}"]},"metadata":{},"sourceType":"module"}