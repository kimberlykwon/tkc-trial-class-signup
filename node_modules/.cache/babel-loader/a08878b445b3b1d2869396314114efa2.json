{"ast":null,"code":"import _slicedToArray from \"/Users/kimberlykwon/Documents/tkc-trial-class-signup/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kimberlykwon/Documents/tkc-trial-class-signup/src/WeekView.js\";\nimport React from 'react';\nimport ScheduleGrid from './ScheduleGrid';\nimport { useTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport SwipeableViews from 'react-swipeable-views';\nimport { StyleSheet } from 'react'; // const useStyles = makeStyles({\n//   root: {\n//     maxWidth: 400,\n//     flexGrow: 1,\n//   },\n// });\n// do date calculation here\n\n/*\nfigure out date data here\n*/\n// function getThisWeek(){\n//   // const todayTime = new Date.now(); // time\n//   const todayDay = new Date().getDay();\n//   // const todayDate = new Date().getDate();\n//   const daysOfTheWeek = [\"Mon\", \"Tues\", \"Wed\", \"Thurs\"];\n//   const fullDaysOutput = [];\n//   // if today's date is in the middle of the week, get dates before and after and calculate next week\n//   // TODO: figure out edge cases\n//   if (todayDay >= 0 && todayDay <= 4){\n//     for (var i = 0; i < 4; i++){\n//       const offset = todayDay - i - 1;\n//       fullDaysOutput[i] = daysOfTheWeek[i] + \" \" + (new Date().getMonth() + 1) + \"/\" + (new Date().getDate()-offset);\n//     }\n//   }\n//   return fullDaysOutput;\n//   // if today's date is after thursday, calculate for next two weeks\n// }\n\nconst weekSteps = [{\n  label: [\"Mon 1/13\", \"Tues 1/14\", \"Wed 1/15\", \"Thurs 1/16\"]\n}, {\n  label: [\"Mon 1/20\", \"Tues 1/21\", \"Wed 1/22\", \"Thurs 1/23\"]\n}];\nconst styles = {\n  slideContainer: {\n    width: \"60%\"\n  },\n  text: {\n    color: '#fff',\n    fontSize: 16\n  }\n};\nexport default function WeekView(props) {\n  // const weekOutput = getThisWeek();\n  // const classes = useStyles();\n  const theme = useTheme();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        activeStep = _React$useState2[0],\n        setActiveStep = _React$useState2[1];\n\n  function handleNext() {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  }\n\n  function handleStepChange(step) {\n    setActiveStep(step);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"small\",\n    onClick: handleBack,\n    disabled: activeStep === 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, theme.direction === 'rtl' ? React.createElement(KeyboardArrowRight, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }) : React.createElement(KeyboardArrowLeft, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), \"Prev Week\"), React.createElement(Button, {\n    size: \"small\",\n    onClick: handleNext,\n    disabled: activeStep === 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Next Week\", theme.direction === 'rtl' ? React.createElement(KeyboardArrowLeft, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }) : React.createElement(KeyboardArrowRight, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), React.createElement(SwipeableViews, {\n    axis: theme.direction === 'rtl' ? 'x-reverse' : 'x',\n    index: activeStep,\n    onChangeIndex: handleStepChange,\n    enableMouseEvents: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, weekSteps.map((step, index) => React.createElement(\"div\", {\n    key: step.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, Math.abs(activeStep - index) < 2 ? React.createElement(ScheduleGrid, {\n    weekOutput: step.label,\n    type: props.version,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }) : null))));\n}","map":{"version":3,"sources":["/Users/kimberlykwon/Documents/tkc-trial-class-signup/src/WeekView.js"],"names":["React","ScheduleGrid","useTheme","Button","KeyboardArrowLeft","KeyboardArrowRight","SwipeableViews","StyleSheet","weekSteps","label","styles","slideContainer","width","text","color","fontSize","WeekView","props","theme","useState","activeStep","setActiveStep","handleNext","prevActiveStep","handleBack","handleStepChange","step","direction","map","index","Math","abs","version"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ScheduleGrid from './ScheduleGrid';\nimport { useTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport SwipeableViews from 'react-swipeable-views';\nimport {StyleSheet} from 'react';\n\n\n// const useStyles = makeStyles({\n//   root: {\n//     maxWidth: 400,\n//     flexGrow: 1,\n//   },\n// });\n\n// do date calculation here\n\n/*\nfigure out date data here\n*/\n// function getThisWeek(){\n//   // const todayTime = new Date.now(); // time\n//   const todayDay = new Date().getDay();\n//   // const todayDate = new Date().getDate();\n\n//   const daysOfTheWeek = [\"Mon\", \"Tues\", \"Wed\", \"Thurs\"];\n//   const fullDaysOutput = [];\n\n//   // if today's date is in the middle of the week, get dates before and after and calculate next week\n//   // TODO: figure out edge cases\n//   if (todayDay >= 0 && todayDay <= 4){\n//     for (var i = 0; i < 4; i++){\n//       const offset = todayDay - i - 1;\n//       fullDaysOutput[i] = daysOfTheWeek[i] + \" \" + (new Date().getMonth() + 1) + \"/\" + (new Date().getDate()-offset);\n//     }\n//   }\n\n//   return fullDaysOutput;\n\n//   // if today's date is after thursday, calculate for next two weeks\n// }\n\nconst weekSteps =[\n  {\n    label: [\"Mon 1/13\", \"Tues 1/14\", \"Wed 1/15\", \"Thurs 1/16\"],\n  },\n  {\n    label: [\"Mon 1/20\", \"Tues 1/21\", \"Wed 1/22\", \"Thurs 1/23\"],\n  }\n]\n\nconst styles = {\n  slideContainer: {\n    width: \"60%\",\n  },\n  text: {\n    color: '#fff',\n    fontSize: 16,\n  },\n};\n\n\nexport default function WeekView(props){\n  // const weekOutput = getThisWeek();\n\n  // const classes = useStyles();\n  const theme = useTheme();\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  function handleNext() {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  }\n\n  function handleStepChange(step) {\n    setActiveStep(step);\n  }\n\n  return (\n    <div>\n      <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n        Prev Week\n      </Button>\n      <Button size=\"small\" onClick={handleNext} disabled={activeStep === 1}>\n        Next Week\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </Button>\n      {/* <div class = \"swipe\">  */}\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={activeStep}\n        onChangeIndex={handleStepChange}\n        enableMouseEvents\n      >\n        {weekSteps.map((step, index) => (\n          <div key={step.label}>\n            {Math.abs(activeStep - index) < 2 ? (\n              <ScheduleGrid weekOutput = {step.label} type= {props.version}/>\n            ) : null}\n          </div>\n        ))}\n      </SwipeableViews>\n      {/* </div> */}\n    </div>\n);\n}"]},"metadata":{},"sourceType":"module"}