{"ast":null,"code":"import _slicedToArray from \"/Users/kimberlykwon/Documents/tkc-trial-class-signup/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kimberlykwon/Documents/tkc-trial-class-signup/src/WeekView.js\";\nimport React from 'react';\nimport ScheduleGrid from './ScheduleGrid';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport SwipeableViews from 'react-swipeable-views'; // const useStyles = makeStyles({\n//   root: {\n//     maxWidth: 400,\n//     flexGrow: 1,\n//   },\n// });\n// do date calculation here\n\n/*\nfigure out date data here\n*/\n\nfunction getThisWeek() {\n  // const todayTime = new Date.now(); // time\n  const todayDay = new Date().getDay();\n  const todayDate = new Date().getDate();\n  const daysOfTheWeek = [\"Mon\", \"Tues\", \"Wed\", \"Thurs\"];\n  const fullDaysOutput = []; // if today's date is in the middle of the week, get dates before and after and calculate next week\n  // TODO: figure out edge cases\n\n  if (todayDay >= 0 && todayDay <= 4) {\n    for (var i = 0; i < 4; i++) {\n      const offset = todayDay - i - 1;\n      fullDaysOutput[i] = daysOfTheWeek[i] + \" \" + (new Date().getMonth() + 1) + \"/\" + (new Date().getDate() - offset);\n    }\n  }\n\n  return fullDaysOutput; // if today's date is after thursday, calculate for next two weeks\n}\n\nconst weekSteps = [{\n  label: getThisWeek()\n}, {\n  label: [\"Mon 9/23\", \"Tues 9/24\", \"Wed 9/25\", \"Thurs 9/26\"]\n}];\nexport default function WeekView() {\n  const weekOutput = getThisWeek(); // const classes = useStyles();\n\n  const theme = useTheme();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        activeStep = _React$useState2[0],\n        setActiveStep = _React$useState2[1];\n\n  function handleNext() {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  }\n\n  function handleStepChange(step) {\n    setActiveStep(step);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"small\",\n    onClick: handleBack,\n    disabled: activeStep === 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, theme.direction === 'rtl' ? React.createElement(KeyboardArrowRight, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }) : React.createElement(KeyboardArrowLeft, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), \"Prev Week\"), React.createElement(Button, {\n    size: \"small\",\n    onClick: handleNext,\n    disabled: activeStep === 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Next Week\", theme.direction === 'rtl' ? React.createElement(KeyboardArrowLeft, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }) : React.createElement(KeyboardArrowRight, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), React.createElement(SwipeableViews, {\n    axis: theme.direction === 'rtl' ? 'x-reverse' : 'x',\n    index: activeStep,\n    onChangeIndex: handleStepChange,\n    enableMouseEvents: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, weekSteps.map((step, index) => React.createElement(\"div\", {\n    key: step.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, Math.abs(activeStep - index) < 2 ? React.createElement(ScheduleGrid, {\n    weekOutput: step.label,\n    type: \"kids\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }) : null))));\n}","map":{"version":3,"sources":["/Users/kimberlykwon/Documents/tkc-trial-class-signup/src/WeekView.js"],"names":["React","ScheduleGrid","makeStyles","useTheme","MobileStepper","Button","KeyboardArrowLeft","KeyboardArrowRight","SwipeableViews","getThisWeek","todayDay","Date","getDay","todayDate","getDate","daysOfTheWeek","fullDaysOutput","i","offset","getMonth","weekSteps","label","WeekView","weekOutput","theme","useState","activeStep","setActiveStep","handleNext","prevActiveStep","handleBack","handleStepChange","step","direction","map","index","Math","abs"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ScheduleGrid from './ScheduleGrid';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport SwipeableViews from 'react-swipeable-views';\n\n\n// const useStyles = makeStyles({\n//   root: {\n//     maxWidth: 400,\n//     flexGrow: 1,\n//   },\n// });\n\n// do date calculation here\n\n/*\nfigure out date data here\n*/\nfunction getThisWeek(){\n  // const todayTime = new Date.now(); // time\n  const todayDay = new Date().getDay();\n  const todayDate = new Date().getDate();\n\n  const daysOfTheWeek = [\"Mon\", \"Tues\", \"Wed\", \"Thurs\"];\n  const fullDaysOutput = [];\n\n  // if today's date is in the middle of the week, get dates before and after and calculate next week\n  // TODO: figure out edge cases\n  if (todayDay >= 0 && todayDay <= 4){\n    for (var i = 0; i < 4; i++){\n      const offset = todayDay - i - 1;\n      fullDaysOutput[i] = daysOfTheWeek[i] + \" \" + (new Date().getMonth() + 1) + \"/\" + (new Date().getDate()-offset);\n    }\n  }\n\n  return fullDaysOutput;\n\n  // if today's date is after thursday, calculate for next two weeks\n}\n\nconst weekSteps =[\n  {\n    label: getThisWeek(),\n  },\n  {\n    label: [\"Mon 9/23\", \"Tues 9/24\", \"Wed 9/25\", \"Thurs 9/26\"],\n  }\n]\n\n\nexport default function WeekView(){\n  const weekOutput = getThisWeek();\n\n  // const classes = useStyles();\n  const theme = useTheme();\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  function handleNext() {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  }\n\n  function handleStepChange(step) {\n    setActiveStep(step);\n  }\n\n  return (\n    <div>\n      {/* <MobileStepper\n        // variant=\"dots\"\n        steps={2}\n        position=\"static\"\n        activeStep={activeStep}\n        // className={classes.root} */}\n        {/* nextButton={ */}\n\n        {/* } */}\n        {/* backButton={ */}\n          <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n            Prev Week\n          </Button>\n          <Button size=\"small\" onClick={handleNext} disabled={activeStep === 1}>\n            Next Week\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n          </Button>\n\n        {/* } */}\n      {/* /> */}\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={activeStep}\n        onChangeIndex={handleStepChange}\n        enableMouseEvents\n      >\n        {weekSteps.map((step, index) => (\n          <div key={step.label}>\n            {Math.abs(activeStep - index) < 2 ? (\n              <ScheduleGrid weekOutput = {step.label} type = {\"kids\"}/>\n            ) : null}\n          </div>\n        ))}\n      </SwipeableViews>\n\n\n    </div>\n);\n}"]},"metadata":{},"sourceType":"module"}