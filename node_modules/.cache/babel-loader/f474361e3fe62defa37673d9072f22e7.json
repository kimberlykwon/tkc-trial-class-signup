{"ast":null,"code":"var _jsxFileName = \"/Users/kimberlykwon/Documents/hi_john/tkc-sign-up-calendar/src/ScheduleGrid.js\";\nimport React from 'react';\nimport Columns from 'react-columns';\nimport GridColumn from './GridColumn';\n/*\nfigure out date data here\n*/\n\nfunction getThisWeek() {\n  // const todayTime = new Date.now(); // time\n  const todayDay = new Date().getDay();\n  const todayDate = new Date().getDate();\n  const daysOfTheWeek = [\"Mon\", \"Tues\", \"Wed\", \"Thurs\"];\n  const fullDaysOutput = []; // if today's date is in the middle of the week, get dates before and after and calculate next week\n\n  if (todayDay >= 0 && todayDay <= 4) {\n    for (var i = 0; i < 4; i++) {\n      const offset = todayDay - i - 1;\n      fullDaysOutput[i] = daysOfTheWeek[i] + \" \" + new Date().getMonth() + \"/\" + (new Date().getDate() - offset);\n    }\n  }\n\n  return fullDaysOutput; // if today's date is after thursday, calculate for next two weeks\n}\n\nexport default function ScheduleGrid() {\n  const weekOutput = getThisWeek();\n  console.log(weekOutput);\n  return React.createElement(Columns, {\n    columns: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      paddingBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Monday\"), React.createElement(GridColumn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      paddingBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Tuesday\"), React.createElement(GridColumn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      paddingBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Wednesday\"), React.createElement(GridColumn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      paddingBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Thursday\"), React.createElement(GridColumn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/kimberlykwon/Documents/hi_john/tkc-sign-up-calendar/src/ScheduleGrid.js"],"names":["React","Columns","GridColumn","getThisWeek","todayDay","Date","getDay","todayDate","getDate","daysOfTheWeek","fullDaysOutput","i","offset","getMonth","ScheduleGrid","weekOutput","console","log","paddingBottom"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAGA;;;;AAOA,SAASC,WAAT,GAAsB;AACpB;AACA,QAAMC,QAAQ,GAAG,IAAIC,IAAJ,GAAWC,MAAX,EAAjB;AACA,QAAMC,SAAS,GAAG,IAAIF,IAAJ,GAAWG,OAAX,EAAlB;AAEA,QAAMC,aAAa,GAAG,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,OAAvB,CAAtB;AACA,QAAMC,cAAc,GAAG,EAAvB,CANoB,CAQpB;;AACA,MAAIN,QAAQ,IAAI,CAAZ,IAAiBA,QAAQ,IAAI,CAAjC,EAAmC;AACjC,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA2B;AACzB,YAAMC,MAAM,GAAGR,QAAQ,GAAGO,CAAX,GAAe,CAA9B;AACAD,MAAAA,cAAc,CAACC,CAAD,CAAd,GAAoBF,aAAa,CAACE,CAAD,CAAb,GAAmB,GAAnB,GAAyB,IAAIN,IAAJ,GAAWQ,QAAX,EAAzB,GAAiD,GAAjD,IAAwD,IAAIR,IAAJ,GAAWG,OAAX,KAAqBI,MAA7E,CAApB;AACD;AACF;;AAED,SAAOF,cAAP,CAhBoB,CAkBpB;AACD;;AAED,eAAe,SAASI,YAAT,GAAuB;AACpC,QAAMC,UAAU,GAAGZ,WAAW,EAA9B;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AAEA,SACA,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAI;AAACG,MAAAA,aAAa,EAAE;AAAhB,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAEC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADF,EAKG;AAAK,IAAA,KAAK,EAAI;AAACA,MAAAA,aAAa,EAAE;AAAhB,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,EAGA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,CALH,EAUG;AAAK,IAAA,KAAK,EAAI;AAACA,MAAAA,aAAa,EAAE;AAAhB,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EAGA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,CAVH,EAeG;AAAK,IAAA,KAAK,EAAI;AAACA,MAAAA,aAAa,EAAE;AAAhB,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAGA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,CAfH,CADA;AAuBD","sourcesContent":["import React from 'react';\nimport Columns from 'react-columns';\nimport GridColumn from './GridColumn';\n\n\n/*\nfigure out date data here\n*/\n\n\n\n\nfunction getThisWeek(){\n  // const todayTime = new Date.now(); // time\n  const todayDay = new Date().getDay();\n  const todayDate = new Date().getDate();\n\n  const daysOfTheWeek = [\"Mon\", \"Tues\", \"Wed\", \"Thurs\"];\n  const fullDaysOutput = [];\n\n  // if today's date is in the middle of the week, get dates before and after and calculate next week\n  if (todayDay >= 0 && todayDay <= 4){\n    for (var i = 0; i < 4; i++){\n      const offset = todayDay - i - 1;\n      fullDaysOutput[i] = daysOfTheWeek[i] + \" \" + new Date().getMonth() + \"/\" + (new Date().getDate()-offset);\n    }\n  }\n\n  return fullDaysOutput;\n\n  // if today's date is after thursday, calculate for next two weeks\n}\n\nexport default function ScheduleGrid(){\n  const weekOutput = getThisWeek();\n  console.log(weekOutput);\n\n  return (\n  <Columns columns=\"4\">\n    <div style = {{paddingBottom: 20}}>\n    <p>Monday</p>\n     <GridColumn/>\n     </div>\n     <div style = {{paddingBottom: 20}}>\n     <p>Tuesday</p>\n\n     <GridColumn/>\n     </div>\n     <div style = {{paddingBottom: 20}}>\n     <p>Wednesday</p>\n\n     <GridColumn/>\n     </div>\n     <div style = {{paddingBottom: 20}}>\n     <p>Thursday</p>\n\n     <GridColumn/>\n     </div>\n  </Columns>\n);\n}"]},"metadata":{},"sourceType":"module"}