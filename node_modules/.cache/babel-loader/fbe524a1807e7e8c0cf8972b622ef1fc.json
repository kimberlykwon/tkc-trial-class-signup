{"ast":null,"code":"import _slicedToArray from \"/Users/kimberlykwon/Documents/tkc-trial-class-signup/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kimberlykwon/Documents/tkc-trial-class-signup/src/ClassButton.js\";\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { ThemeProvider, makeStyles } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  otherClass: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(.5),\n    textAlign: 'left',\n    [theme.breakpoints.up('xs')]: {\n      width: 50,\n      fontSize: 8\n    },\n    [theme.breakpoints.up('sm')]: {\n      width: 90,\n      fontSize: 10\n    },\n    [theme.breakpoints.up('md')]: {\n      width: 120,\n      fontSize: 12\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: 150,\n      fontSize: 14\n    }\n  }\n}));\nconst dialogTheme = createMuiTheme({\n  overrides: {\n    // Style sheet name ⚛️\n    MuiDialog: {\n      paper: {\n        backGroundColor: '#FFFFFF'\n      },\n      root: {\n        border: 1,\n        backGroundColor: '#FFFFFF'\n      }\n    }\n  }\n});\nexport default function ClassButton(props) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        open2 = _React$useState4[0],\n        setOpen2 = _React$useState4[1];\n\n  const state = {\n    to_email: '',\n    day: props.classDay,\n    time: props.classTime,\n    names: ''\n  }; // const theme = useStyles();\n  // const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  function handleOnChange(e) {}\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleRegisterClose() {\n    // TODO: check if inputs entered\n    // setOpen(false);\n    // open another dialog box of confirmation \n    setOpen(false);\n    setOpen2(true);\n  }\n\n  function setNames(input) {\n    state[names] = input;\n  }\n\n  function setEmail(input) {\n    state[email] = email;\n  }\n\n  function handleClickOpen2() {\n    setOpen(true);\n  }\n\n  function handleClose2() {\n    setOpen(false);\n  }\n\n  function handleRegisterClose2() {\n    // TODO: check if inputs entered\n    setOpen2(false); // open another dialog box of confirmation \n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClickOpen,\n    disabled: props.clickable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.otherClass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Box, {\n    fontWeight: \"fontWeightBold\",\n    paddingBottom: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \" \", props.classTime), props.className)), React.createElement(ThemeProvider, {\n    theme: dialogTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Register\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"You have chosen to have the free trial class on \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, props.classDay), \" at \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \" \", props.classTime, \" \"), \". Enter the information below to complete registration.\"), React.createElement(TextField // autoFocus = \"false\"\n  , {\n    margin: \"normal\",\n    id: \"email\",\n    label: \"Email Address\",\n    type: \"email\",\n    required: true,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), React.createElement(TextField // autoFocus=\"false\"\n  , {\n    margin: \"normal\",\n    id: \"name\",\n    label: \"Name(s) of participant(s)\",\n    type: \"text\",\n    required: true,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  })), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    onClick: handleRegisterClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Register\"))), React.createElement(Dialog, {\n    open: open2,\n    onClose: handleClose2,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Registration Complete\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Thank you for signing up for the first trial class! You will see a confirmation email in your inbox soon.\")), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleRegisterClose2,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Close\")))));\n}","map":{"version":3,"sources":["/Users/kimberlykwon/Documents/tkc-trial-class-signup/src/ClassButton.js"],"names":["React","Paper","Button","Box","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","ThemeProvider","makeStyles","createMuiTheme","useStyles","theme","root","flexGrow","otherClass","padding","spacing","margin","textAlign","breakpoints","up","width","fontSize","dialogTheme","overrides","MuiDialog","paper","backGroundColor","border","ClassButton","props","classes","useState","open","setOpen","open2","setOpen2","state","to_email","day","classDay","time","classTime","names","handleOnChange","e","handleClickOpen","handleClose","handleRegisterClose","setNames","input","setEmail","email","handleClickOpen2","handleClose2","handleRegisterClose2","clickable","className"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box'\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { ThemeProvider, makeStyles} from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n\n  otherClass: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(.5),\n    textAlign: 'left',\n    [theme.breakpoints.up('xs')]: {\n      width: 50,\n      fontSize: 8,\n    },\n    [theme.breakpoints.up('sm')]: {\n      width: 90,\n      fontSize: 10,\n\n    },\n    [theme.breakpoints.up('md')]: {\n      width: 120,\n      fontSize: 12,\n\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: 150,\n      fontSize: 14,\n\n    },\n  },\n}));\n\nconst dialogTheme = createMuiTheme({\n  overrides: {\n    // Style sheet name ⚛️\n\n    MuiDialog: {\n      paper: {\n        backGroundColor: '#FFFFFF',\n      },\n      root: {\n        border: 1,\n        backGroundColor: '#FFFFFF',\n      }\n    },\n  },\n});\n\nexport default function ClassButton(props){\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const [open2, setOpen2] = React.useState(false);\n\n  const state = {\n    to_email: '',\n    day: props.classDay,\n    time: props.classTime,\n    names: '',\n  }\n\n  // const theme = useStyles();\n\n  // const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  function handleOnChange(e){\n\n  }\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleRegisterClose() {\n    // TODO: check if inputs entered\n    // setOpen(false);\n    // open another dialog box of confirmation \n    setOpen(false);\n    setOpen2(true);\n  }\n\n  function setNames(input){\n    state[names] = input;\n  }\n\n  function setEmail(input){\n    state[email] = email;\n  }\n\n  function handleClickOpen2() {\n    setOpen(true);\n  }\n\n  function handleClose2() {\n    setOpen(false);\n  }\n\n  function handleRegisterClose2() {\n    // TODO: check if inputs entered\n  setOpen2(false);\n    // open another dialog box of confirmation \n\n  }\n\n  return(\n    <div>\n      <Button onClick={handleClickOpen} disabled = {props.clickable}>\n        <Paper className = {classes.otherClass}>\n          <Box fontWeight = \"fontWeightBold\" paddingBottom = {1} > {props.classTime}</Box>\n          {props.className}\n        </Paper>\n      </Button>\n      <ThemeProvider theme = {dialogTheme}>\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">Register</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              You have chosen to have the free trial class on <b>{props.classDay}</b> at <b> {props.classTime} </b>. Enter the information below to complete registration. \n            </DialogContentText>\n            <TextField\n              // autoFocus = \"false\"\n              margin=\"normal\"\n              id=\"email\"\n              label=\"Email Address\"\n              type=\"email\"\n              required\n              fullWidth\n            />\n            <TextField\n              // autoFocus=\"false\"\n              margin=\"normal\"\n              id=\"name\"\n              label=\"Name(s) of participant(s)\"\n              type=\"text\"\n              required\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={handleRegisterClose} color=\"primary\">\n              Register\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Dialog open={open2} onClose={handleClose2} aria-labelledby=\"form-dialog-title\" >\n          <DialogTitle id=\"form-dialog-title\">Registration Complete</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Thank you for signing up for the first trial class! You will see a confirmation email in your inbox soon. \n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleRegisterClose2} color=\"primary\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </ThemeProvider >\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}