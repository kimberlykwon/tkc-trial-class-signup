{"version":3,"sources":["ClassButton.js","GridColumn.js","ScheduleGrid.js","WeekView.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","otherClass","padding","spacing","margin","textAlign","breakpoints","up","width","fontSize","dialogTheme","createMuiTheme","overrides","MuiDialog","paper","backGroundColor","border","ClassButton","props","classes","React","useState","open","setOpen","open2","setOpen2","handleClose","Button","onClick","Paper","className","Box","fontWeight","paddingBottom","classTime","ThemeProvider","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","classDay","TextField","label","type","required","fullWidth","DialogActions","color","bestClass","green","recClass","lightgreen","lessRecClass","lime","classTheme","MuiButton","text","borderColor","MuiPaper","backgroundColor","bestClassTheme","recClassTheme","lessRecClassTheme","GridPart","Grid","container","direction","justify","alignItems","dayOption","day","optionMW","optionTTh","ScheduleGrid","columns","weekOutput","style","getThisWeek","todayDay","Date","getDay","daysOfTheWeek","getDate","fullDaysOutput","i","offset","getMonth","weekSteps","WeekView","useTheme","activeStep","setActiveStep","MobileStepper","steps","position","nextButton","size","prevActiveStep","disabled","backButton","axis","index","onChangeIndex","step","enableMouseEvents","map","key","Math","abs","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.36d6f500.chunk.js","sourcesContent":["import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box'\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { ThemeProvider, makeStyles} from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n\n  otherClass: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(.5),\n    textAlign: 'left',\n    [theme.breakpoints.up('xs')]: {\n      width: 50,\n      fontSize: 8,\n    },\n    [theme.breakpoints.up('sm')]: {\n      width: 90,\n      fontSize: 10,\n\n    },\n    [theme.breakpoints.up('md')]: {\n      width: 120,\n      fontSize: 12,\n\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: 150,\n      fontSize: 14,\n\n    },\n  },\n}));\n\nconst dialogTheme = createMuiTheme({\n  overrides: {\n    // Style sheet name ⚛️\n\n    MuiDialog: {\n      paper: {\n        backGroundColor: '#FFFFFF',\n      },\n      root: {\n        border: 1,\n        backGroundColor: '#FFFFFF',\n      }\n    },\n  },\n});\n\nexport default function ClassButton(props){\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const [open2, setOpen2] = React.useState(false);\n\n  // const theme = useStyles();\n\n  // const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleRegisterClose() {\n    // TODO: check if inputs entered\n    // setOpen(false);\n    // open another dialog box of confirmation \n    setOpen(false);\n    setOpen2(true);\n  }\n\n\n\n  function handleClickOpen2() {\n    setOpen(true);\n  }\n\n  function handleClose2() {\n    setOpen(false);\n  }\n\n  function handleRegisterClose2() {\n    // TODO: check if inputs entered\n  setOpen2(false);\n    // open another dialog box of confirmation \n\n  }\n\n  return(\n    <div>\n      <Button onClick={handleClickOpen}>\n        <Paper className = {classes.otherClass}>\n          <Box fontWeight = \"fontWeightBold\" paddingBottom = {1} > {props.classTime}</Box>\n          {props.className}\n        </Paper>\n      </Button>\n      <ThemeProvider theme = {dialogTheme}>\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">Register</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              You have chosen to have the free trial class on <b>{props.classDay}</b> at <b> {props.classTime} </b>. Enter the information below to complete registration. \n            </DialogContentText>\n            <TextField\n              // autoFocus = \"false\"\n              margin=\"normal\"\n              id=\"email\"\n              label=\"Email Address\"\n              type=\"email\"\n              required\n              fullWidth\n            />\n            <TextField\n              // autoFocus=\"false\"\n              margin=\"normal\"\n              id=\"name\"\n              label=\"Name(s) of participant(s)\"\n              type=\"text\"\n              required\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={handleRegisterClose} color=\"primary\">\n              Register\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Dialog open={open2} onClose={handleClose2} aria-labelledby=\"form-dialog-title\" >\n          <DialogTitle id=\"form-dialog-title\">Register</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Thank you for signing up for the first trial class! You will see a confirmation email in your inbox soon. \n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleRegisterClose2} color=\"primary\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </ThemeProvider >\n    </div>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box'\nimport green from '@material-ui/core/colors/green'\nimport lightgreen from '@material-ui/core/colors/lightGreen'\nimport lime from '@material-ui/core/colors/lime'\nimport { ThemeProvider, makeStyles } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { borders } from '@material-ui/system';\nimport ClassButton from './ClassButton';\n\nconst bestClass = green[500]; // #F44336\nconst recClass = lightgreen[400]; // #E040FB\nconst lessRecClass = lime[400];\n\nconst classTheme = createMuiTheme({\n\n  overrides: {\n    // Style sheet name ⚛️\n\n    MuiButton: {\n      text: {\n        padding: 0,\n      },\n      root: {\n        border: 1,\n        borderColor: lessRecClass,\n      }\n    },\n    MuiPaper: {\n      // Name of the rule\n      root: {\n        // Some CSS\n        backgroundColor: '#FFFFFF',\n      },\n    },\n  },\n});\n\nconst bestClassTheme = createMuiTheme({\n  overrides: {\n    // Style sheet name ⚛️\n    MuiButton: {\n      text: {\n        padding: 0,\n      },\n    },\n    MuiPaper: {\n      // Name of the rule\n      root: {\n        // Some CSS\n        backgroundColor: bestClass,\n      },\n    },\n  },\n});\n\nconst recClassTheme = createMuiTheme({\n  overrides: {\n    // Style sheet name ⚛️\n    MuiButton: {\n      text: {\n        padding: 0,\n      },\n    },\n    MuiPaper: {\n      // Name of the rule\n      root: {\n        // Some CSS\n        backgroundColor: recClass,\n      },\n    },\n  },\n});\n\nconst lessRecClassTheme = createMuiTheme({\n  overrides: {\n    // Style sheet name ⚛️\n    MuiButton: {\n      text: {\n        padding: 0,\n      },\n    },\n    MuiPaper: {\n      // Name of the rule\n      root: {\n        // Some CSS\n        backgroundColor: lessRecClass,\n      },\n    },\n  },\n});\n\nconst themeMapping = {\n  \"bestClass\" : bestClassTheme,\n  \"recClass\" : recClassTheme,\n  \"lessRecClass\" : lessRecClassTheme,\n};\n\nexport default function GridPart(props){\n  \n  return(\n    <Grid\n      container\n      spacing = {1}\n      direction=\"column\"\n      justify=\"flex-start\"\n      alignItems=\"center\"\n      >\n\n      <ThemeProvider theme={classTheme}>\n          <ThemeProvider theme={bestClassTheme}>\n            <ClassButton className = {props.dayOption[\"classes\"][0]} classTime = {props.dayOption[props.dayOption[\"classes\"][0]][\"classTime\"]}classDay = {props.day}/>\n          </ThemeProvider>\n          <ThemeProvider theme={bestClassTheme}>\n            <ClassButton className = {props.dayOption[\"classes\"][1]} classTime = {props.dayOption[props.dayOption[\"classes\"][1]][\"classTime\"]}classDay = {props.day}/>\n          </ThemeProvider>\n            <ClassButton className = {props.dayOption[\"classes\"][2]} classTime = {props.dayOption[props.dayOption[\"classes\"][2]][\"classTime\"]}classDay = {props.day}/>\n          <ThemeProvider theme={recClassTheme}>\n            <ClassButton className = {props.dayOption[\"classes\"][3]} classTime = {props.dayOption[props.dayOption[\"classes\"][3]][\"classTime\"]}classDay = {props.day}/>\n          </ThemeProvider>\n          <ThemeProvider theme={lessRecClassTheme}>\n            <ClassButton className = {props.dayOption[\"classes\"][4]} classTime = {props.dayOption[props.dayOption[\"classes\"][4]][\"classTime\"]}classDay = {props.day}/>\n          </ThemeProvider>\n      </ThemeProvider>\n    </Grid> \n  );\n}\n","import React from 'react';\nimport Columns from 'react-columns';\nimport GridColumn from './GridColumn';\n\n\n\n\n/*\nclass lists for two options (m,w/t,th)\n*/\nconst optionMW = {\n  \"classes\": [\"Kids Taekwondo Class\", \"Basic Class\", \"Advanced/ Black Belt Class\", \"Family Class/ Black Belt Class\", \"Family Class\"],\n  \"Kids Taekwondo Class\" : {\n    \"classType\": \"bestClass\",\n    \"classTime\": \"3:50 - 4:20pm\"\n  },\n  \"Basic Class\" : {\n    \"classType\": \"bestClass\",\n    \"classTime\": \"4:20 - 5:00pm\"\n  },\n  \"Advanced/ Black Belt Class\": {\n    \"classType\": \"noRecClass\",\n    \"classTime\": \"5:10 - 5:50pm\"\n  },\n  \"Family Class/ Black Belt Class\": {\n    \"classType\": \"recClass\",\n    \"classTime\": \"6:10 - 6:50pm\"\n  },\n  \"Family Class\": {\n    \"classType\": \"lessRecClass\",\n    \"classTime\": \"7:10 - 7:50pm\"\n  }\n}\n\nconst optionTTh = {\n  classes: [\"Kids Taekwondo Class\",  \"Advanced/ Black Belt Class\", \"Basic Class\", \"Demo Class\", \"Family Class/ Black Belt Class\"],\n  \"Kids Taekwondo Class\" : {\n    \"classType\": \"bestClass\",\n    \"classTime\": \"3:50 - 4:20pm\"\n  },\n  \"Advanced/ Black Belt Class\": {\n    \"classType\": \"noRecClass\",\n    \"classTime\": \"4:20 - 5:00pm\"\n  },\n  \"Basic Class\" : {\n    \"classType\": \"bestClass\",\n    \"classTime\": \"5:10 - 5:50pm\",\n  },\n  \"Demo Class\": {\n    \"classType\": \"noRecClass\",\n    \"classTime\": \"6:10 - 6:50pm\"\n  },\n  \"Family Class/ Black Belt Class\": {\n    \"classType\": \"lessRecClass\",\n    \"classTime\": \"7:10 - 7:50pm\"\n  }\n}\n\n// const kidClass = \"Kids Taekwondo Class\";\n// const basicClass = \"Basic Class\";\n// const advancedClass = \"Advanced/ Black Belt Class\";\n// const familyBBClass = \"Family Class/ Black Belt Class\";\n// const familyClass = \"Family Class\";\n\n// const kidClassTime = \"3:50 - 4:20pm\";\n// const basicClassTime = \"4:20 - 5:00pm\";\n// const advancedClassTime = \"5:10 - 5:50pm\";\n// const familyBBClassTime = \"6:10 - 6:50pm\";\n// const familyClassTime = \"7:10 - :50pm\";\n\nexport default function ScheduleGrid(props){\n  // const weekOutput = getThisWeek();\n  // console.log(weekOutput);\n\n  return (\n  <Columns columns=\"4\">\n    <div >  \n    <p>{props.weekOutput[0]}</p>\n     <GridColumn dayOption = {optionMW} day = {props.weekOutput[0]}/>\n     </div>\n     <div style = {{paddingBottom: 20}}>\n     <p>{props.weekOutput[1]}</p>\n\n     <GridColumn dayOption = {optionTTh} day = {props.weekOutput[1]}/>\n     </div>\n     <div style = {{paddingBottom: 20}}>\n     <p>{props.weekOutput[2]}</p>\n\n     <GridColumn dayOption = {optionMW} day = {props.weekOutput[2]}/>\n     </div>\n     <div style = {{paddingBottom: 20}}>\n     <p>{props.weekOutput[3]}</p>\n\n     <GridColumn dayOption = {optionTTh} day = {props.weekOutput[3]}/>\n     </div>\n  </Columns>\n);\n}","import React from 'react';\nimport ScheduleGrid from './ScheduleGrid';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport SwipeableViews from 'react-swipeable-views';\n\n\n// const useStyles = makeStyles({\n//   root: {\n//     maxWidth: 400,\n//     flexGrow: 1,\n//   },\n// });\n\n// do date calculation here\n\n/*\nfigure out date data here\n*/\nfunction getThisWeek(){\n  // const todayTime = new Date.now(); // time\n  const todayDay = new Date().getDay();\n  const todayDate = new Date().getDate();\n\n  const daysOfTheWeek = [\"Mon\", \"Tues\", \"Wed\", \"Thurs\"];\n  const fullDaysOutput = [];\n\n  // if today's date is in the middle of the week, get dates before and after and calculate next week\n  // TODO: figure out edge cases\n  if (todayDay >= 0 && todayDay <= 4){\n    for (var i = 0; i < 4; i++){\n      const offset = todayDay - i - 1;\n      fullDaysOutput[i] = daysOfTheWeek[i] + \" \" + (new Date().getMonth() + 1) + \"/\" + (new Date().getDate()-offset);\n    }\n  }\n\n  return fullDaysOutput;\n\n  // if today's date is after thursday, calculate for next two weeks\n}\n\nconst weekSteps =[\n  {\n    label: getThisWeek(),\n  },\n  {\n    label: [\"Mon 9/23\", \"Tues 9/24\", \"Wed 9/25\", \"Thurs 9/26\"],\n  }\n]\n\n\nexport default function WeekView(){\n  const weekOutput = getThisWeek();\n\n  // const classes = useStyles();\n  const theme = useTheme();\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  function handleNext() {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  }\n\n  function handleStepChange(step) {\n    setActiveStep(step);\n  }\n\n  return (\n    <div>\n      <MobileStepper\n        // variant=\"dots\"\n        steps={2}\n        position=\"static\"\n        activeStep={activeStep}\n        // className={classes.root}\n        nextButton={\n          <Button size=\"small\" onClick={handleNext} disabled={activeStep === 1}>\n            Next Week\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n          </Button>\n        }\n        backButton={\n          <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n            Prev Week\n          </Button>\n        }\n      />\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={activeStep}\n        onChangeIndex={handleStepChange}\n        enableMouseEvents\n      >\n        {weekSteps.map((step, index) => (\n          <div key={step.label}>\n            {Math.abs(activeStep - index) < 2 ? (\n              <ScheduleGrid weekOutput = {step.label}/>\n            ) : null}\n          </div>\n        ))}\n      </SwipeableViews>\n\n    </div>\n);\n}","import React from 'react';\nimport './App.css';\nimport ScheduleGrid from './ScheduleGrid';\nimport WeekView from './WeekView';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>\n          TKC Free Trial Class Sign-Up\n        </h2>\n        <div className = \"textGen\">\n          <p className=\"textBlurb\">\n            We always work around our families’ schedules. If any of these recommended times don’t work for you OR for holiday hours, please call (630) 708-3132.\n          </p>\n          <WeekView/>\n          {/* <ScheduleGrid/> */}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}